# [Config]
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <config_script.sh>"
    exit 1
fi

config_script=$1
source ${config_script}
echo "Running with config:"
echo "  Alignment directory: ${alignmentDir}"
echo "  Peak calling directory: ${peakCallingDir}"
echo "  Genome size: ${genomeSize}"
echo "  q-value: ${qValue}"
echo "  p-value: ${pValue}"
echo "  Use background lambda: ${useBackgroundLambda}"
echo "  Use model: ${useModel}"
echo "  Extension size: ${extsize}"
echo "  Perform cutoff analysis: ${cutoffAnalysis}"

# [Main]

# Check if the directory exists, if not, create it
if [ ! -d ${peakCallingDir} ]; then
    mkdir ${peakCallingDir}
    mkdir ${peakCallingDir}/macs2
fi

if [ ! -d ${peakCallingDir}/macs2 ]; then
    mkdir ${peakCallingDir}/macs2
fi

# Whether to perform cutoff analysis
case ${cutoffAnalysis} in
    true | True | TRUE | T | t )
        cutoffAnalysis="--cutoff-analysis"
        cutoffDir="/cutoff_analysis"
        if [ ! -d ${peakCallingDir}/macs2${cutoffDir} ]; then
            mkdir ${peakCallingDir}/macs2${cutoffDir}
        fi
        ;;
    *)
        cutoffAnalysis=""
        cutoffDir=""
        ;;
esac

# Define subdirectory
subDir="no_ctrl"

# Determine if p-value is used to replace q-value for peak calling
# Determine is ${pValue} is set to a numeric value
if [[ ${pValue} =~ ^0\.[0-9]+$ ]]; then
    cutoff="-p ${pValue}"
    subDir="${subDir}_p${pValue}"
    echo "...Using p-value ${pValue} for peak calling"
    echo "...Overriding default q-value"
else
    cutoff="-q ${qValue}"
    subDir="${subDir}_q${qValue}"
fi

# Whether background lambda is used
case ${useBackgroundLambda} in
    true | True | TRUE | T | t )
        backgroundLambda=""
        ;;
    *)
        backgroundLambda="--nolambda"
        subDir="${subDir}_nolambda"
        ;;
esac

# Whether a model is used for peak calling
case ${useModel} in
    true | True | TRUE | T | t )
        model=""
        extSize=""
        ;;
    *)
        model="--nomodel"
        extSize="--extsize ${extsize}"
        subDir="${subDir}_nomodel_ext${extsize}"
        ;;
esac

# Subdirectory for peak calling output based on parameters specified
if [ ! -d ${peakCallingDir}/macs2${cutoffDir}/${subDir} ]; then
    mkdir ${peakCallingDir}/macs2${cutoffDir}/${subDir}
fi


# This peak calling script does not use any negative controls

# Here we keep track of the total number of samples called for narrow and broad peaks
narrows=0
broads=0

# Find the file in the peak calling directory that contains the list of samples
# to be used for calling narrow peaks
# This file should be generated by extract_samples_by_peak_type.py
# and should be named samples_narrow_peak.txt

narrowSamples=$(find ${peakCallingDir} -type f -name "samples_narrow_peak.txt")

# Check if the file exists
if [ -z ${narrowSamples} ]; then
    echo "File samples_narrow_peak.txt not found in ${peakCallingDir}"
    echo "Skipping peak calling for narrow peaks"
else
    # Iterate over all samples and perform peak calling with MACS2

    for file in $(cat ${narrowSamples}); do
        sample=$(basename $file .bam)

        echo "Peak calling for sample ${sample}"
        macs2 callpeak -t ${alignmentDir}/filtered_bam/${sample}.bam \
            -f BAMPE \
            -g ${genomeSize} \
            -n ${sample} \
            ${cutoff} \
            ${backgroundLambda} \
            ${model} \
            ${extSize} \
            -B \
            --SPMR \
            ${cutoffAnalysis} \
            --outdir ${peakCallingDir}/macs2${cutoffDir}/${subDir}
        
        if [ $? -eq 0 ]; then
            narrows=$((narrows+1))
        fi
    done
fi

# Find the file in the peak calling directory that contains the list of samples
# to be used for calling broad peaks
# This file should be generated by extract_samples_by_peak_type.py
# and should be named samples_broad_peak.txt

broadSamples=$(find ${peakCallingDir} -type f -name "samples_broad_peak.txt")

# Check if the file exists
if [ -z ${broadSamples} ]; then
    echo "File samples_broad_peak.txt not found in ${peakCallingDir}"
    echo "Skipping peak calling for broad peaks"
else
    # Iterate over all samples and perform peak calling with MACS2

    for file in $(cat ${broadSamples}); do
        sample=$(basename $file .bam)

        echo "Peak calling for sample ${sample}"
        macs2 callpeak -t ${alignmentDir}/filtered_bam/${sample}.bam \
            -f BAMPE \
            -g ${genomeSize} \
            -n ${sample} \
            ${cutoff} \
            ${backgroundLambda} \
            ${model} \
            ${extSize} \
            -B \
            --SPMR \
            --broad \
            ${cutoffAnalysis} \
            --outdir ${peakCallingDir}/macs2${cutoffDir}/${subDir}

        if [ $? -eq 0 ]; then
            broads=$((broads+1))
        fi
    done
fi

echo "Peak calling complete"
echo "Total number of samples called for narrow peaks: ${narrows}"
echo "Total number of samples called for broad peaks: ${broads}"

# [END]